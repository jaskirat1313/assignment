[{"F:\\syook-project\\assignment\\src\\index.js":"1","F:\\syook-project\\assignment\\src\\App.js":"2","F:\\syook-project\\assignment\\src\\stores\\store.js":"3","F:\\syook-project\\assignment\\src\\ObjectCard.react.js":"4","F:\\syook-project\\assignment\\src\\MainNote.react.js":"5","F:\\syook-project\\assignment\\src\\Notes.react.js":"6"},{"size":166,"mtime":1612455243497,"results":"7","hashOfConfig":"8"},{"size":1532,"mtime":1612455252224,"results":"9","hashOfConfig":"8"},{"size":1699,"mtime":1612455171277,"results":"10","hashOfConfig":"8"},{"size":449,"mtime":1612440464867,"results":"11","hashOfConfig":"8"},{"size":1914,"mtime":1612455198943,"results":"12","hashOfConfig":"8"},{"size":664,"mtime":1612455204579,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"qw2yua",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\syook-project\\assignment\\src\\index.js",[],["29","30"],"F:\\syook-project\\assignment\\src\\App.js",[],"F:\\syook-project\\assignment\\src\\stores\\store.js",["31","32","33","34","35"],"import { decorate, observable } from \"mobx\";\n\nclass Store {\n  constructor() {\n    let title = null;\n    let desc = null;\n    let id = null;\n    let editPost = null;\n    let posts = []; //[{task: '', desc:''}]\n  }\n\n  setTitle(title) {\n    this.title = title;\n    localStorage.setItem(\"title\", title);\n    return this.title;\n  }\n\n  getTitle() {\n    if (!this.title && localStorage.getItem(\"title\")) {\n      this.setTitle(localStorage.getItem(\"title\"));\n    }\n    return this.title;\n  }\n\n  setDesc(desc) {\n    this.desc = desc;\n    localStorage.setItem(\"desc\", desc);\n    return this.desc;\n  }\n\n  getDesc() {\n    if (!this.desc && localStorage.getItem(\"desc\")) {\n      this.setDesc(localStorage.getItem(\"desc\"));\n    }\n    return this.desc;\n  }\n\n  setEditPost(editPost) {\n    this.editPost = editPost;\n    localStorage.setItem(\"editPost\", editPost);\n    return this.editPost;\n  }\n\n  getEditPost() {\n    if (!this.editPost && localStorage.getItem(\"editPost\")) {\n      this.setEditPost(localStorage.getItem(\"editPost\"));\n    }\n    return this.editPost;\n  }\n\n  setId(id) {\n    this.id = id;\n    localStorage.setItem(\"id\", id);\n    return this.id;\n  }\n\n  getId() {\n    if (!this.id && localStorage.getItem(\"id\")) {\n      this.setId(localStorage.getItem(\"id\"));\n    }\n    return this.id;\n  }\n\n  setPosts(posts) {\n    localStorage.setItem(\"posts\", JSON.stringify(posts));\n    this.posts = posts;\n    return this.posts;\n  }\n\n  getPosts() {\n    if (!this.posts && localStorage.getItem(\"posts\")) {\n      this.setPosts(JSON.parse(localStorage.getItem(\"posts\")));\n    }\n    return this.posts;\n  }\n}\n\ndecorate(Store, {\n  title: observable,\n  desc: observable,\n  posts: observable,\n});\n\nexport default new Store();\n","F:\\syook-project\\assignment\\src\\ObjectCard.react.js",[],"F:\\syook-project\\assignment\\src\\MainNote.react.js",["36","37","38"],"import React, { Component } from \"react\";\r\n\r\nimport { observer } from \"mobx-react\";\r\nimport store from \"./stores/store\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nclass Main extends Component {\r\n  render() {\r\n    const title = store.getTitle();\r\n    const desc = store.getDesc();\r\n    const id = store.getId();\r\n    const editPost = store.getEditPost();\r\n    const posts = store.getPosts();\r\n    const { v4: uuidv4 } = require(\"uuid\");\r\n\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <form>\r\n          <input\r\n            type=\"text\"\r\n            name=\"tittle\"\r\n            placeholder=\"Tittle\"\r\n            value={title ? title : \"\"}\r\n            onChange={(e) => {\r\n              store.setTitle(e.target.value);\r\n            }}\r\n            autoComplete=\"off\"\r\n          />\r\n          <br />\r\n          <br />\r\n          <textarea\r\n            placeholder=\"Description\"\r\n            name=\"desc\"\r\n            value={desc ? desc : \"\"}\r\n            onChange={(e) => {\r\n              store.setDesc(e.target.value);\r\n            }}\r\n            autoComplete=\"off\"\r\n          ></textarea>\r\n          <br />\r\n          <br />\r\n\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => {\r\n              let posts = store.getPosts();\r\n              if (!posts) {\r\n                posts = [];\r\n              }\r\n\r\n              store.setPosts([\r\n                ...posts,\r\n                {\r\n                  id: uuidv4(),\r\n                  title: title,\r\n                  desc: desc,\r\n                  editPost: \"\",\r\n                },\r\n              ]);\r\n              store.setId(\"\");\r\n              store.setTitle(\"\");\r\n              store.setDesc(\"\");\r\n              store.setEditPost(\"\");\r\n            }}\r\n          >\r\n            {\" \"}\r\n            {editPost ? \"Edit Post\" : \"Create\"}\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default observer(Main);\r\n","F:\\syook-project\\assignment\\src\\Notes.react.js",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":5,"column":9,"nodeType":"45","messageId":"46","endLine":5,"endColumn":14},{"ruleId":"43","severity":1,"message":"47","line":6,"column":9,"nodeType":"45","messageId":"46","endLine":6,"endColumn":13},{"ruleId":"43","severity":1,"message":"48","line":7,"column":9,"nodeType":"45","messageId":"46","endLine":7,"endColumn":11},{"ruleId":"43","severity":1,"message":"49","line":8,"column":9,"nodeType":"45","messageId":"46","endLine":8,"endColumn":17},{"ruleId":"43","severity":1,"message":"50","line":9,"column":9,"nodeType":"45","messageId":"46","endLine":9,"endColumn":14},{"ruleId":"43","severity":1,"message":"51","line":5,"column":16,"nodeType":"45","messageId":"46","endLine":5,"endColumn":22},{"ruleId":"43","severity":1,"message":"48","line":11,"column":11,"nodeType":"45","messageId":"46","endLine":11,"endColumn":13},{"ruleId":"43","severity":1,"message":"50","line":13,"column":11,"nodeType":"45","messageId":"46","endLine":13,"endColumn":16},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"no-unused-vars","'title' is assigned a value but never used.","Identifier","unusedVar","'desc' is assigned a value but never used.","'id' is assigned a value but never used.","'editPost' is assigned a value but never used.","'posts' is assigned a value but never used.","'uuidv4' is defined but never used.","no-global-assign","no-unsafe-negation"]