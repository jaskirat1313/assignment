{"version":3,"sources":["stores/store.js","MainNote.react.js","sms.png","Notes.react.js","ObjectCard.react.js","App.js","index.js"],"names":["Store","title","this","localStorage","setItem","getItem","setTitle","desc","setDesc","editPost","setEditPost","id","setId","posts","JSON","stringify","setPosts","parse","decorate","observable","Main","store","getTitle","getDesc","getId","getEditPost","uuidv4","getPosts","require","v4","className","type","name","placeholder","value","onChange","e","target","autoComplete","onClick","Component","observer","Notes","props","update","del","edit","class","src","sms","alt","ObjectCard","App","map","post","i","filteredPost","filter","uPost","updatePost","selectedItem","find","ePosts","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3e528c1d.chunk.js","sourcesContent":["import { decorate, observable } from \"mobx\";\n\nclass Store {\n  constructor() {\n    let title = null;\n    let desc = null;\n    let id = null;\n    let editPost = null;\n    let posts = []; //[{task: '', desc:''}]\n  }\n\n  setTitle(title) {\n    this.title = title;\n    localStorage.setItem(\"title\", title);\n    return this.title;\n  }\n\n  getTitle() {\n    if (!this.title && localStorage.getItem(\"title\")) {\n      this.setTitle(localStorage.getItem(\"title\"));\n    }\n    return this.title;\n  }\n\n  setDesc(desc) {\n    this.desc = desc;\n    localStorage.setItem(\"desc\", desc);\n    return this.desc;\n  }\n\n  getDesc() {\n    if (!this.desc && localStorage.getItem(\"desc\")) {\n      this.setDesc(localStorage.getItem(\"desc\"));\n    }\n    return this.desc;\n  }\n\n  setEditPost(editPost) {\n    this.editPost = editPost;\n    localStorage.setItem(\"editPost\", editPost);\n    return this.editPost;\n  }\n\n  getEditPost() {\n    if (!this.editPost && localStorage.getItem(\"editPost\")) {\n      this.setEditPost(localStorage.getItem(\"editPost\"));\n    }\n    return this.editPost;\n  }\n\n  setId(id) {\n    this.id = id;\n    localStorage.setItem(\"id\", id);\n    return this.id;\n  }\n\n  getId() {\n    if (!this.id && localStorage.getItem(\"id\")) {\n      this.setId(localStorage.getItem(\"id\"));\n    }\n    return this.id;\n  }\n\n  setPosts(posts) {\n    localStorage.setItem(\"posts\", JSON.stringify(posts));\n    this.posts = posts;\n    return this.posts;\n  }\n\n  getPosts() {\n    if (!this.posts && localStorage.getItem(\"posts\")) {\n      this.setPosts(JSON.parse(localStorage.getItem(\"posts\")));\n    }\n    return this.posts;\n  }\n}\n\ndecorate(Store, {\n  title: observable,\n  desc: observable,\n  posts: observable,\n});\n\nexport default new Store();\n","import React, { Component } from \"react\";\r\n\r\nimport { observer } from \"mobx-react\";\r\nimport store from \"./stores/store\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nclass Main extends Component {\r\n  render() {\r\n    const title = store.getTitle();\r\n    const desc = store.getDesc();\r\n    const id = store.getId();\r\n    const editPost = store.getEditPost();\r\n    const posts = store.getPosts();\r\n    const { v4: uuidv4 } = require(\"uuid\");\r\n\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <form>\r\n          <input\r\n            type=\"text\"\r\n            name=\"tittle\"\r\n            placeholder=\"Tittle\"\r\n            value={title ? title : \"\"}\r\n            onChange={(e) => {\r\n              store.setTitle(e.target.value);\r\n            }}\r\n            autoComplete=\"off\"\r\n          />\r\n          <br />\r\n          <br />\r\n          <textarea\r\n            placeholder=\"Description\"\r\n            name=\"desc\"\r\n            value={desc ? desc : \"\"}\r\n            onChange={(e) => {\r\n              store.setDesc(e.target.value);\r\n            }}\r\n            autoComplete=\"off\"\r\n          ></textarea>\r\n          <br />\r\n          <br />\r\n\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => {\r\n              let posts = store.getPosts();\r\n              if (!posts) {\r\n                posts = [];\r\n              }\r\n\r\n              store.setPosts([\r\n                ...posts,\r\n                {\r\n                  id: uuidv4(),\r\n                  title: title,\r\n                  desc: desc,\r\n                  editPost: \"\",\r\n                },\r\n              ]);\r\n              store.setId(\"\");\r\n              store.setTitle(\"\");\r\n              store.setDesc(\"\");\r\n              store.setEditPost(\"\");\r\n            }}\r\n          >\r\n            {\" \"}\r\n            {editPost ? \"Edit Post\" : \"Create\"}\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default observer(Main);\r\n","export default __webpack_public_path__ + \"static/media/sms.9d8993af.png\";","import React, { Component } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport sms from \"./sms.png\";\r\n//import Button from '@material-ui/core/Button';\r\nclass Notes extends Component {\r\n  render() {\r\n    const { title, update, del, edit } = this.props;\r\n    return (\r\n      <div className=\"m\">\r\n        <div className=\"note\">\r\n          <div class=\"header\">\r\n            <img src={sms} alt=\"logo\" />\r\n            <h1>{title}</h1>\r\n          </div>\r\n\r\n          <p>{update}</p>\r\n          <button onClick={del}>Delete</button>\r\n          <button onClick={edit}>Edit</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default observer(Notes);\r\n","import React, { Component } from \"react\"\n\nimport Notes from \"./Notes.react.js\"\n\nimport { observer } from \"mobx-react\"\n\nclass ObjectCard extends Component {\n  render() {\n    const { id, title, update, del, edit } = this.props\n\n    return (\n      <div>\n        <Notes\n          id={id}\n          title={title}\n          update={update}\n          del={del}\n          edit={edit}\n        />\n      </div>\n    )\n  }\n}\n\nexport default observer(ObjectCard)\n","import \"./App.css\";\nimport React, { Component } from \"react\";\nimport Main from \"./MainNote.react\";\nimport ObjectCard from \"./ObjectCard.react\";\n\nimport { observer } from \"mobx-react\";\nimport store from \"./stores/store\";\n\nexport class App extends Component {\n  render() {\n    const posts = store.getPosts();\n\n    return (\n      <div>\n        <Main />\n\n        {posts &&\n          posts.map((post, i) => (\n            <ObjectCard\n              key={post.i}\n              id={post.id}\n              title={post.title}\n              update={post.desc}\n              del={() => {\n                let updatePost = store.getPosts();\n                const filteredPost = updatePost.filter(\n                  (uPost) => uPost.id !== post.id\n                );\n\n                store.setPosts(filteredPost);\n              }}\n              edit={() => {\n                let updatePost = store.getPosts();\n                const filteredPost = updatePost.filter(\n                  (uPost) => uPost.id !== post.id\n                );\n\n                const selectedItem = updatePost.find(\n                  (ePosts) => ePosts.id === post.id\n                );\n                // console.log(selectedItem.title)\n                store.setPosts([...filteredPost]);\n\n                store.setTitle(selectedItem.title);\n                store.setDesc(selectedItem.desc);\n                store.setId(post.id);\n                store.setEditPost(true);\n              }}\n            />\n          ))}\n      </div>\n    );\n  }\n}\n\nexport default observer(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}